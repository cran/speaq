\documentclass[11pt]{article}
\usepackage{graphicx}
\usepackage{geometry}
 \geometry{
 a4paper,
 total={170mm,257mm},
 left=20mm,
 top=20mm,
 }


%\VignetteIndexEntry{Introduction to speaq}
%\VignetteDepends{MassSpecWavelet}
%\VignetteKeywords{NMR, Spectral Alignment, Chromatograms, Nuclear Magnetic Resonance, Metabolomics, Cheminformatics}
%\VignettePackage{speaq}
%\VignetteEngine{knitr::knitr}

\begin{document}



\title{User guide for $speaq$ package version 1.2.3}
\author{Trung Nghia Vu, et al}
\maketitle

\section{Introduction}
We introduce a novel suite of informatics tools for the quantitative analysis of NMR metabolomic profile data. The core of the processing cascade is a novel peak alignment algorithm, called hierarchical Cluster-based Peak Alignment (CluPA).

The algorithm aligns a target spectrum to the reference spectrum in a top-down fashion by building a hierarchical cluster tree from peak lists of reference and target spectra and then dividing the spectra into smaller segments based on the most distant clusters of the tree. To reduce the computational time to estimate the spectral misalignment, the method makes use of Fast Fourier Transformation (FFT) cross-correlation. Since the method returns a high-quality alignment, we can propose a simple methodology to study the variability of the NMR spectra. For each aligned NMR data point the ratio of the between-group and within-group sum of squares (BW-ratio) is calculated to quantify the difference in variability between and within predefined groups of NMR spectra. This differential analysis is related to the calculation of the F-statistic or a one-way ANOVA, but without distributional assumptions. Statistical inference based on the BW-ratio is achieved by bootstrapping the null distribution from the experimental data.


We are going to introduce step-by-step how $speaq$  works for a specific dataset, includes
\begin{itemize}
  \item automatically do alignment
  \item allow user intervening into the process
  \item compute BW ratios
  \item visualize results
\end{itemize}

Any issue reports or discussion about speaq can be contact via the developing website at github (https://github.com/nghiavtr/speaq). 

\section{Data input}

We randomly generate an NMR spectral dataset of two different groups (15 spectra for each group). Each spectrum has two peaks slightly shifted cross over spectra. More details are described in the manual document of function $makeSimulatedData$().



<<Read_data_input,fig.keep='none', tidy=FALSE, message=F, warning=F>>=
library(speaq)
#Generate a simulated NMR data set for this experiment
res=makeSimulatedData();
X=res$data;
groupLabel=res$label;
@

Now, we draw a spectral plot to observe the dataset before alignment.

<<Unaligned_spectral_plots>>=
drawSpec(X);
@

\section{Peak detection}
This section makes use of MassSpecWavelet package to detect peak lists of the dataset.

<<Peak_detection>>=
cat("\n detect peaks....");
startTime <- proc.time();
peakList <- detectSpecPeaks(X,
    nDivRange = c(128),                
    scales = seq(1, 16, 2),
    baselineThresh = 50000,
    SNR.Th = -1,
    verbose=FALSE
);

endTime <- proc.time();
cat("Peak detection time:",(endTime[3]-startTime[3])/60," minutes");
@

\section{Reference finding}
Next, We find the reference for other spectra align to.

<<Reference_finding>>=

cat("\n Find the spectrum reference...")
resFindRef<- findRef(peakList);
refInd <- resFindRef$refInd;

#The ranks of spectra
for (i in 1:length(resFindRef$orderSpec))
{
    cat(paste(i, ":",resFindRef$orderSpec[i],sep=""), " ");
    if (i %% 10 == 0) cat("\n")
}
    
cat("\n The reference is: ", refInd);

@


\section{Spectral alignment}
For spectral alignment, function $dohCluster()$ is used to implement hierarchical Cluster-based Peak Alignment [1] (CluPA) algorithm. In this function $maxShift$ is set by 100 by default which is suitable with many NMR datasets. Experienced users can set select more proper for their dataset. For example:

<<Spectral_alignment>>=
# Set maxShift
maxShift = 50;

Y <- dohCluster(X,
                peakList = peakList,
                refInd = refInd,
                maxShift  = maxShift,
                acceptLostPeak = TRUE, verbose=FALSE);

@

\subsection{Automatically detect the optimal $maxShift$}
If users are not confident when selecting a value for the $maxShift$, just set the value to $NULL$. Then, the software will automatically learn to select the optimal value based on the median Pearson correlation coefficent between spectra. It is worth noting that this metric is significantly effected by high peaks in the spectra [2], so it might not be the best measure for evaluating alignment performances. However, it is fast for the purpose of detecting the suitable $maxShift$ value. This mode also takes more time since CluPA implements extra alignment for few $maxShift$ values. If set $verbose=TRUE$, a plot of performances of CluPA with different values of $maxShift$ will be displayed. For example:
<<Spectral_alignment_optimal_maxShift,fig.align='center'>>=
Y <- dohCluster(X,
                peakList = peakList,
                refInd = refInd,
                maxShift  = NULL,
                acceptLostPeak = TRUE, verbose=TRUE);

@
In this example, the best $maxShift=32$ which is hightlighted by a red star in the plot achieves the highest median Pearson correlation coefficent (0.93).

\subsection{Spectral alignment with selected segments}

If users just want to align in speficic segments or prefer to use different parametter settings for different segments. $speaq$ allows users to do that by intervene into the process. To do that, users need to create a segment information matrix as the example in Table 1.

\label{tab:table_1}
\begin{table}[htb]
\begin{center}
\caption{Example of infomation file to customize spectral aligment to segments}
\begin{tabular}{c c c c c}
\hline
begin & end & forAlign & ref & maxShift \\ \hline
100&200&0&0&0\\
450&680&1&0&50\\
\end{tabular}

\end{center}
\end{table} 

Each row contains the following information corresponding to the columns:

\begin{itemize}
  \item begin: the starting point of the segment.
  \item end: the end point of the segment.
  \item forAlign: the segment is aligned (1) or not (0).
  \item ref: the index of the reference spectrum. If 0, the algorithm will select the reference found by the reference finding step.
  \item maxShift: the maximum number of points of a shift to left/right.
\end{itemize}

\textbf{ It is worth to note that only segments with forAlign=1  (column 3) will be taken into account for spectral alignment.} \\


Now, simply run $dohClusterCustommedSegments$ with the input from the infomation file.

<<Spectral_segment_alignment>>=
segmentInfoMat=matrix(data=c(100,200,0,0,0,
                      450,680,1,0,50),nrow=2,ncol=5,byrow=TRUE
                      )
colnames(segmentInfoMat)=c("begin","end","forAlign","ref","maxShift")
segmentInfoMat

Yc <- dohClusterCustommedSegments(X,
                                 peakList = peakList,
                                 refInd = refInd,
                                 segmentInfoMat = segmentInfoMat,
                                 minSegSize = 128,
                                 verbose=FALSE)
                                 
@
\section{Spectral plots}
We could draw a segment to see the performance of the alignement.
<<Aligned_spectral_plots>>=
drawSpec(Y);
@

We could limit the heights of spectra to easily check the alignment performance.
<<Aligned_spectral_plots_limited_height>>=
drawSpec(Y,
        startP=450,
        endP=680,
        highBound = 5e+5,
        lowBound = -100);
@

We achieved similar results with $Yc$ but the region of the first peak was not aligned because the segment information just allows align the region 450-680.

<<Aligned_spectral_plots_customized>>=
drawSpec(Yc);
@

\section{Quantitative analysis}

This section presents the quantatative analysis for wine data that was used in our paper [1]. To save time, we just do permutation 100 times to create null distribution.

<<Quantitative_analysisE>>=
N = 100;
alpha = 0.05;

# find the BW-statistic
BW = BWR(Y, groupLabel);

# create sampled H0 and export to file
H0 = createNullSampling(Y, groupLabel, N = N,verbose=FALSE)

#compute percentile of alpha
perc = double(ncol(Y));
alpha_corr = alpha/sum(returnLocalMaxima(Y[2,])$pkMax>50000);
for (i in 1 : length(perc)){    
    perc[i] = quantile(H0[,i],1-alpha_corr, type = 3);
}
@


Now, some figures are plotting. Read the publication to understand more about these figures.

<<drawBW_1>>=
drawBW(BW, perc,Y, groupLabel = groupLabel)
@

<<drawBW_2>>=
drawBW(BW, perc, Y ,startP=450, endP=680, groupLabel = groupLabel)
@

\section{References}


\begin{enumerate}

\item Vu, Trung Nghia, Dirk Valkenborg, Koen Smets, Kim A. Verwaest, Roger Dommisse, Filip Lemiere, Alain Verschoren, Bart Goethals, and Kris Laukens. "An Integrated Workflow for Robust Alignment and Simplified Quantitative Analysis of NMR Spectrometry Data." BMC Bioinformatics 12, no. 1 (October 20, 2011): 405.
\item Vu, Trung Nghia, and Kris Laukens. "Getting Your Peaks in Line: A Review of Alignment Methods for NMR Spectral Data." Metabolites 3, no. 2 (April 15, 2013): 259-76.

\end{enumerate}



\end{document}